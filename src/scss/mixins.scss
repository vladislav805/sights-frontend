@import './colors.scss';
@import './sizes.scss';

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin flex($direction, $wrap: nowrap) {
    display: flex;
    flex-flow: $direction $wrap;
}

@mixin flex-center {
    @include flex(row);
    justify-content: center;
    align-items: center;
}

$themes-default: (
    ('primary', (
        background: var(--color-primary),
        color: #ffffff,
    )),
    ('secondary', (
        background: var(--color-secondary),
        color: #000000,
    ))
) !global;

@mixin apply-themes($themes: $themes-default) {
    @each $name, $rules in $themes {
        &__#{$name} {
            @include print-rules($rules);
        }
    }
}

@mixin print-rules($rules) {
    @each $name, $value in $rules {
        #{$name}: $value;
    }
}

$breakpoints: (
    touch: $breakpoint-touch,
    pad: $breakpoint-pad,
    desktop: $breakpoint-desktop,
    desktop-wide: $breakpoint-desktop-wide,
);

@mixin respond-to($width, $type: min) {
    @if (map_has_key($breakpoints, $width)) {
        $width: map_get($breakpoints, $width);

        @if ($type == max) {
            $width: $width - 1;
        }

        @media (#{$type}-width: $width) {
            @content;
        }
    }
}
